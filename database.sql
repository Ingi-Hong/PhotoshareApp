CREATE DATABASE IF NOT EXISTS photoshare;
USE photoshare;

DROP TABLE IF EXISTS Pictures CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS LIKES CASCADE;
DROP TABLE IF EXISTS FRIENDS CASCADE;
DROP TABLE IF EXISTS TAGGED_PHOTOS CASCADE;
DROP TABLE IF EXISTS TAGS CASCADE;
DROP TABLE IF EXISTS Photos CASCADE;
DROP TABLE IF EXISTS albums CASCADE;
DROP TABLE IF EXISTS users CASCADE;



CREATE TABLE users (
u_id CHAR(9) NOT NULL,
first_name VARCHAR(11),
last_name VARCHAR(11),
gender VARCHAR(11),
dob DATE,
hometown VARCHAR(11),
email VARCHAR (30) UNIQUE,
password CHAR(64),
is_registered BIT NOT NULL,  
PRIMARY KEY (u_id)
);



CREATE TABLE albums (
A_id VARCHAR (11),
Name VARCHAR (11),
owner_id CHAR (9),
date DATE,
PRIMARY KEY (a_id),

FOREIGN KEY (owner_id) REFERENCES USERS(u_id) ON DELETE CASCADE
);

CREATE TABLE PHOTOS (
p_id VARCHAR(11),
Caption VARCHAR (50),
data VARBINARY (50),
a_id VARCHAR(11),
FOREIGN KEY (a_id) REFERENCES albums(a_id) ON DELETE CASCADE,
PRIMARY KEY (p_id)
);


CREATE TABLE comments ( 
c_id CHAR(9) NOT NULL,
text CHAR(100) NOT NULL,
date DATE NOT NULL, 
uid CHAR(9) NOT NULL,
PRIMARY KEY (c_id),
FOREIGN KEY (uid) REFERENCES users(u_id)
);

CREATE TABLE LIKES (
UserID CHAR(9),
PhotoID CHAR (9),
PRIMARY KEY (UserID,PhotoID),
FOREIGN KEY (UserID) REFERENCES users(u_id),
FOREIGN KEY (PhotoID) REFERENCES PHOTOS(p_id)
);


CREATE TABLE FRIENDS (
user1 CHAR(9) NOT NULL,
user2 CHAR(9) NOT NULL,
FOREIGN KEY (user1) REFERENCES users(u_id),
PRIMARY KEY (user1, user2));






CREATE TABLE TAGS(
Tag VARCHAR(10),
PRIMARY KEY (tag)
);



CREATE TABLE TAGGED_PHOTOS(
p_id VARCHAR(11), 
tag VARCHAR(10), 
FOREIGN KEY (p_id) REFERENCES PHOTOS(p_id),
FOREIGN KEY (tag) REFERENCES TAGS(tag),
PRIMARY KEY (p_id, tag)
);




